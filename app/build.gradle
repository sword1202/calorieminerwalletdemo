apply plugin: 'com.android.application'

repositories {
    mavenLocal()
    flatDir {
        dirs 'libs'
    }
}

android {

    dexOptions {
        javaMaxHeapSize "4g"
    }

    signingConfigs {
        releaseSigning {
            keyAlias 'key0'
            keyPassword 'adfsadfaset@3523Af'
            storeFile file('/Users/p1/Desktop/Aneel_Work/Calminer/Calminer4 latest working/myjks.jks')
            storePassword 'adfsadfaset@3523Af'
        }
    }
    compileSdkVersion 27
    buildToolsVersion "27.0.2"

    android {
        configurations.all {
            resolutionStrategy.force 'com.google.code.findbugs:jsr305:1.3.9'
        }
    }

    configurations {
        all {
            exclude module: 'httpclient'
        }
    }

    defaultConfig {
        applicationId "com.calorieminer.minerapp"
        minSdkVersion 19
        targetSdkVersion 27
        versionCode 1
        versionName "1.0.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
        externalNativeBuild {
            cmake {
                cppFlags "-frtti -fexceptions"
                abiFilters 'x86', 'x86_64', 'armeabi', 'armeabi-v7a', 'arm64-v8a', 'mips', 'mips64'
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.releaseSigning
            debuggable false
        }
    }

    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE-FIREBASE.txt'
        exclude 'META-INF/NOTICE'
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['src/main/jniLibs']
            jni.srcDirs = [] //disable automatic ndk-build call with auto-generated Android.mk
        }
    }

    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }

    splits {
        abi {
            enable true
            reset()
            include "armeabi","armeabi-v7a",'arm64-v8a',"mips","x86","x86_64",'arm64-v8a'
            universalApk true
        }
    }
}

// for different code version
ext.versionCodes = ['armeabi': 3, 'armeabi-v7a': 4, 'arm64-v8a': 5,
                    mips: 6, 'x86': 7, 'x86_64': 8]
import com.android.build.OutputFile
// For each APK output variant, override versionCode with a combination
// of ABI APK value * 1000 + defaultConfig.versionCode
android.applicationVariants.all { variant ->
// assign different version code for each output
    variant.outputs.each { output ->
        def abiFilter = output.getFilter(OutputFile.ABI)
        def abiMultiplier = 0
        if (abiFilter != null) {
            abiMultiplier = project.ext.versionCodes.get(abiFilter)
        }
        output.versionCodeOverride =
                abiMultiplier * 1000 + android.defaultConfig.versionCode
    }
}

dependencies {
    implementation 'com.lsjwzh:materialloadingprogressbar:0.5.8-RELEASE'
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:design:27.0.2'
    implementation 'com.github.bumptech.glide:glide:3.7.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.3.1'
    implementation 'de.hdodenhof:circleimageview:2.2.0'
    implementation 'com.android.support:appcompat-v7:27.0.2'
    implementation 'com.google.android.gms:play-services-auth:11.8.0'
    implementation 'com.google.android.gms:play-services-maps:11.8.0'
    implementation 'com.google.android.gms:play-services-location:11.8.0'
    implementation 'com.google.android.gms:play-services-plus:11.8.0'
    implementation 'com.google.firebase:firebase-database:11.8.0'
    implementation 'com.google.firebase:firebase-storage:11.8.0'
    implementation 'com.google.firebase:firebase-auth:11.8.0'
    implementation 'com.google.firebase:firebase-messaging:11.8.0'
    implementation 'com.google.firebase:firebase-config:11.8.0'
    implementation 'com.google.android.gms:play-services-appinvite:11.8.0'
    implementation 'com.google.firebase:firebase-messaging:11.8.0'
    implementation 'com.google.android.gms:play-services-ads:11.8.0'
    implementation 'com.google.firebase:firebase-crash:11.8.0'
    implementation 'com.google.firebase:firebase-appindexing:11.8.0'
    implementation 'com.firebaseui:firebase-ui-database:3.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    implementation 'com.pnikosis:materialish-progress:1.7'
    implementation 'org.bouncycastle:bcprov-jdk15on:1.56'
    implementation 'io.github.luizgrp.sectionedrecyclerviewadapter:sectionedrecyclerviewadapter:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support:support-annotations:27.0.2'
    implementation 'com.google.firebase:firebase-core:11.8.0'
    implementation 'com.google.api-client:google-api-client-android:1.22.0' exclude module: 'httpclient'
    implementation 'com.google.http-client:google-http-client-gson:1.20.0' exclude module: 'httpclient'
    implementation 'com.google.apis:google-api-services-vision:v1-rev357-1.22.0'
    //    implementation 'com.google.cloud:google-cloud-video-intelligence:0.32.0-beta'
    //    annotationProcessor 'com.google.auto.value:auto-value:1.2'
    implementation project(':openCVLibrary')
}

apply plugin: 'com.google.gms.google-services'
